# Starts an Android emulator using the specified sdk and device.
# The emulator is setup to improve test reliability and reduce flakiness, by ensuring it doesn't lock itself,
# increasing the long-press delay, and disabling animations, spellchecker, IME keyboard and autofill service.

parameters:
  sdk: 28
  device: 'Nexus 5X'

steps:
- bash: |
    # Download image and create emulator.
    echo 'y' | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-${{ parameters.sdk }};google_apis;x86"
    echo 'no' | $ANDROID_HOME/tools/bin/avdmanager create avd -n "emulator-${{ parameters.sdk }}" -d "${{ parameters.device }}" -k "system-images;android-${{ parameters.sdk }};google_apis;x86" -c 128M -f
    # Ensure hardware keyboard configuration is enabled, and set 1GB of RAM.
    printf 'hw.keyboard = yes\nhw.ramSize = 1024\n' >> ~/.android/avd/"emulator-${{ parameters.sdk }}.avd"/config.ini
    # Start emulator.
    nohup $ANDROID_HOME/emulator/emulator -avd "emulator-${{ parameters.sdk }}" -no-snapshot -no-boot-anim >/dev/null 2>&1 &
    # Wait for it to start.
    sleep 1
    # Print online devices.
    $ANDROID_HOME/platform-tools/adb devices
    # Wait for the device, and set it up: ensure it's on, disable animations, ime, spell checker and autofill.
    $ANDROID_HOME/platform-tools/adb </dev/null wait-for-device shell '
          while [[ "$(getprop sys.boot_completed)" != "1" || "$(getprop init.svc.bootanim)" != "stopped" ]]; do sleep 1; done;
            svc power stayon true;
            settings put global window_animation_scale 0;
            settings put global transition_animation_scale 0;
            settings put global animator_duration_scale 0;
            settings put secure long_press_timeout 1500;
            settings put secure show_ime_with_hard_keyboard 0;
            settings put secure spell_checker_enabled 0;
            settings put secure autofill_service null;
            input keyevent 82;'
  timeoutInMinutes: 10
  displayName: "Start emulator for API ${{ parameters.sdk }}"
